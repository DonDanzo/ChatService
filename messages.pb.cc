// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: messages.proto
// Protobuf C++ Version: 5.30.0-dev

#include "messages.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace ChatMessages {

inline constexpr UserMessage::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        m_username_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        m_useripaddress_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        m_usersenttime_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        m_wtf_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        m_userid_{::uint64_t{0u}} {}

template <typename>
PROTOBUF_CONSTEXPR UserMessage::UserMessage(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(UserMessage_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct UserMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UserMessageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UserMessageDefaultTypeInternal() {}
  union {
    UserMessage _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UserMessageDefaultTypeInternal _UserMessage_default_instance_;
}  // namespace ChatMessages
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_messages_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_messages_2eproto = nullptr;
const ::uint32_t
    TableStruct_messages_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::ChatMessages::UserMessage, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::ChatMessages::UserMessage, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::ChatMessages::UserMessage, _impl_.m_userid_),
        PROTOBUF_FIELD_OFFSET(::ChatMessages::UserMessage, _impl_.m_username_),
        PROTOBUF_FIELD_OFFSET(::ChatMessages::UserMessage, _impl_.m_useripaddress_),
        PROTOBUF_FIELD_OFFSET(::ChatMessages::UserMessage, _impl_.m_usersenttime_),
        PROTOBUF_FIELD_OFFSET(::ChatMessages::UserMessage, _impl_.m_wtf_),
        4,
        0,
        1,
        2,
        3,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 13, -1, sizeof(::ChatMessages::UserMessage)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::ChatMessages::_UserMessage_default_instance_._instance,
};
const char descriptor_table_protodef_messages_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\016messages.proto\022\014ChatMessages\"s\n\013UserMe"
    "ssage\022\020\n\010m_userId\030\001 \001(\004\022\022\n\nm_userName\030\002 "
    "\001(\t\022\027\n\017m_userIpAddress\030\003 \001(\t\022\026\n\016m_userSe"
    "ntTime\030\004 \001(\t\022\r\n\005m_WTF\030\005 \001(\tb\006proto3"
};
static ::absl::once_flag descriptor_table_messages_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_messages_2eproto = {
    false,
    false,
    155,
    descriptor_table_protodef_messages_2eproto,
    "messages.proto",
    &descriptor_table_messages_2eproto_once,
    nullptr,
    0,
    1,
    schemas,
    file_default_instances,
    TableStruct_messages_2eproto::offsets,
    file_level_enum_descriptors_messages_2eproto,
    file_level_service_descriptors_messages_2eproto,
};
namespace ChatMessages {
// ===================================================================

class UserMessage::_Internal {
 public:
  using HasBits =
      decltype(std::declval<UserMessage>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(UserMessage, _impl_._has_bits_);
};

UserMessage::UserMessage(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, UserMessage_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ChatMessages.UserMessage)
}
inline PROTOBUF_NDEBUG_INLINE UserMessage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::ChatMessages::UserMessage& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        m_username_(arena, from.m_username_),
        m_useripaddress_(arena, from.m_useripaddress_),
        m_usersenttime_(arena, from.m_usersenttime_),
        m_wtf_(arena, from.m_wtf_) {}

UserMessage::UserMessage(
    ::google::protobuf::Arena* arena,
    const UserMessage& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, UserMessage_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  UserMessage* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.m_userid_ = from._impl_.m_userid_;

  // @@protoc_insertion_point(copy_constructor:ChatMessages.UserMessage)
}
inline PROTOBUF_NDEBUG_INLINE UserMessage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        m_username_(arena),
        m_useripaddress_(arena),
        m_usersenttime_(arena),
        m_wtf_(arena) {}

inline void UserMessage::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.m_userid_ = {};
}
UserMessage::~UserMessage() {
  // @@protoc_insertion_point(destructor:ChatMessages.UserMessage)
  SharedDtor(*this);
}
inline void UserMessage::SharedDtor(MessageLite& self) {
  UserMessage& this_ = static_cast<UserMessage&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.m_username_.Destroy();
  this_._impl_.m_useripaddress_.Destroy();
  this_._impl_.m_usersenttime_.Destroy();
  this_._impl_.m_wtf_.Destroy();
  this_._impl_.~Impl_();
}

inline void* UserMessage::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) UserMessage(arena);
}
constexpr auto UserMessage::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(UserMessage),
                                            alignof(UserMessage));
}
constexpr auto UserMessage::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_UserMessage_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &UserMessage::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<UserMessage>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &UserMessage::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<UserMessage>(), &UserMessage::ByteSizeLong,
              &UserMessage::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(UserMessage, _impl_._cached_size_),
          false,
      },
      &UserMessage::kDescriptorMethods,
      &descriptor_table_messages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        UserMessage_class_data_ =
            UserMessage::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* UserMessage::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&UserMessage_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(UserMessage_class_data_.tc_table);
  return UserMessage_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 77, 2> UserMessage::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(UserMessage, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    UserMessage_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::ChatMessages::UserMessage>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint64 m_userId = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(UserMessage, _impl_.m_userid_), 4>(),
     {8, 4, 0, PROTOBUF_FIELD_OFFSET(UserMessage, _impl_.m_userid_)}},
    // string m_userName = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(UserMessage, _impl_.m_username_)}},
    // string m_userIpAddress = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 1, 0, PROTOBUF_FIELD_OFFSET(UserMessage, _impl_.m_useripaddress_)}},
    // string m_userSentTime = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 2, 0, PROTOBUF_FIELD_OFFSET(UserMessage, _impl_.m_usersenttime_)}},
    // string m_WTF = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 3, 0, PROTOBUF_FIELD_OFFSET(UserMessage, _impl_.m_wtf_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 m_userId = 1;
    {PROTOBUF_FIELD_OFFSET(UserMessage, _impl_.m_userid_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // string m_userName = 2;
    {PROTOBUF_FIELD_OFFSET(UserMessage, _impl_.m_username_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string m_userIpAddress = 3;
    {PROTOBUF_FIELD_OFFSET(UserMessage, _impl_.m_useripaddress_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string m_userSentTime = 4;
    {PROTOBUF_FIELD_OFFSET(UserMessage, _impl_.m_usersenttime_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string m_WTF = 5;
    {PROTOBUF_FIELD_OFFSET(UserMessage, _impl_.m_wtf_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\30\0\12\17\16\5\0\0"
    "ChatMessages.UserMessage"
    "m_userName"
    "m_userIpAddress"
    "m_userSentTime"
    "m_WTF"
  }},
};

PROTOBUF_NOINLINE void UserMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:ChatMessages.UserMessage)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.m_username_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.m_useripaddress_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.m_usersenttime_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      _impl_.m_wtf_.ClearNonDefaultToEmpty();
    }
  }
  _impl_.m_userid_ = ::uint64_t{0u};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* UserMessage::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const UserMessage& this_ = static_cast<const UserMessage&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* UserMessage::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const UserMessage& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:ChatMessages.UserMessage)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 m_userId = 1;
          if ((this_._impl_._has_bits_[0] & 0x00000010u) != 0) {
            if (this_._internal_m_userid() != 0) {
              target = stream->EnsureSpace(target);
              target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                  1, this_._internal_m_userid(), target);
            }
          }

          // string m_userName = 2;
          if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
            if (!this_._internal_m_username().empty()) {
              const std::string& _s = this_._internal_m_username();
              ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                  _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ChatMessages.UserMessage.m_userName");
              target = stream->WriteStringMaybeAliased(2, _s, target);
            }
          }

          // string m_userIpAddress = 3;
          if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
            if (!this_._internal_m_useripaddress().empty()) {
              const std::string& _s = this_._internal_m_useripaddress();
              ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                  _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ChatMessages.UserMessage.m_userIpAddress");
              target = stream->WriteStringMaybeAliased(3, _s, target);
            }
          }

          // string m_userSentTime = 4;
          if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
            if (!this_._internal_m_usersenttime().empty()) {
              const std::string& _s = this_._internal_m_usersenttime();
              ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                  _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ChatMessages.UserMessage.m_userSentTime");
              target = stream->WriteStringMaybeAliased(4, _s, target);
            }
          }

          // string m_WTF = 5;
          if ((this_._impl_._has_bits_[0] & 0x00000008u) != 0) {
            if (!this_._internal_m_wtf().empty()) {
              const std::string& _s = this_._internal_m_wtf();
              ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                  _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ChatMessages.UserMessage.m_WTF");
              target = stream->WriteStringMaybeAliased(5, _s, target);
            }
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:ChatMessages.UserMessage)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t UserMessage::ByteSizeLong(const MessageLite& base) {
          const UserMessage& this_ = static_cast<const UserMessage&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t UserMessage::ByteSizeLong() const {
          const UserMessage& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:ChatMessages.UserMessage)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x0000001fu) {
            // string m_userName = 2;
            if (cached_has_bits & 0x00000001u) {
              if (!this_._internal_m_username().empty()) {
                total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                                this_._internal_m_username());
              }
            }
            // string m_userIpAddress = 3;
            if (cached_has_bits & 0x00000002u) {
              if (!this_._internal_m_useripaddress().empty()) {
                total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                                this_._internal_m_useripaddress());
              }
            }
            // string m_userSentTime = 4;
            if (cached_has_bits & 0x00000004u) {
              if (!this_._internal_m_usersenttime().empty()) {
                total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                                this_._internal_m_usersenttime());
              }
            }
            // string m_WTF = 5;
            if (cached_has_bits & 0x00000008u) {
              if (!this_._internal_m_wtf().empty()) {
                total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                                this_._internal_m_wtf());
              }
            }
            // uint64 m_userId = 1;
            if (cached_has_bits & 0x00000010u) {
              if (this_._internal_m_userid() != 0) {
                total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                    this_._internal_m_userid());
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void UserMessage::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<UserMessage*>(&to_msg);
  auto& from = static_cast<const UserMessage&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ChatMessages.UserMessage)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      if (!from._internal_m_username().empty()) {
        _this->_internal_set_m_username(from._internal_m_username());
      } else {
        if (_this->_impl_.m_username_.IsDefault()) {
          _this->_internal_set_m_username("");
        }
      }
    }
    if (cached_has_bits & 0x00000002u) {
      if (!from._internal_m_useripaddress().empty()) {
        _this->_internal_set_m_useripaddress(from._internal_m_useripaddress());
      } else {
        if (_this->_impl_.m_useripaddress_.IsDefault()) {
          _this->_internal_set_m_useripaddress("");
        }
      }
    }
    if (cached_has_bits & 0x00000004u) {
      if (!from._internal_m_usersenttime().empty()) {
        _this->_internal_set_m_usersenttime(from._internal_m_usersenttime());
      } else {
        if (_this->_impl_.m_usersenttime_.IsDefault()) {
          _this->_internal_set_m_usersenttime("");
        }
      }
    }
    if (cached_has_bits & 0x00000008u) {
      if (!from._internal_m_wtf().empty()) {
        _this->_internal_set_m_wtf(from._internal_m_wtf());
      } else {
        if (_this->_impl_.m_wtf_.IsDefault()) {
          _this->_internal_set_m_wtf("");
        }
      }
    }
    if (cached_has_bits & 0x00000010u) {
      if (from._internal_m_userid() != 0) {
        _this->_impl_.m_userid_ = from._impl_.m_userid_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UserMessage::CopyFrom(const UserMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ChatMessages.UserMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void UserMessage::InternalSwap(UserMessage* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.m_username_, &other->_impl_.m_username_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.m_useripaddress_, &other->_impl_.m_useripaddress_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.m_usersenttime_, &other->_impl_.m_usersenttime_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.m_wtf_, &other->_impl_.m_wtf_, arena);
        swap(_impl_.m_userid_, other->_impl_.m_userid_);
}

::google::protobuf::Metadata UserMessage::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace ChatMessages
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_messages_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
